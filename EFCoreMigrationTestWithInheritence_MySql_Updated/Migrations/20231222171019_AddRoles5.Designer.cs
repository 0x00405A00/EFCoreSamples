// <auto-generated />
using System;
using EFCoreMigrationTestWithInheritence_MySql_Updated;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreMigrationTestWithInheritence_MySql_Updated.Migrations
{
    [DbContext(typeof(NewContext))]
    [Migration("20231222171019_AddRoles5")]
    partial class AddRoles5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Shared.Data.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "IDX_ID");

                    b.ToTable("role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c3f357ff-1c85-4e3c-b6b2-21ef4afba71f"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("c92db414-765b-46dd-bf40-ef7d5a5abd7b"),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Shared.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<DateTime?>("CreatedTime")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<Guid>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasDefaultValue(new Guid("c92db314-765b-46dd-bf40-ef7d5a5abd7b"))
                        .HasColumnName("user_type_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("UserTypeId");

                    b.HasIndex(new[] { "Id" }, "IDX_ID")
                        .HasDatabaseName("IDX_ID1");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c92db313-765b-46dd-bf40-ef7d5a5abd7b"),
                            CreatedTime = new DateTime(2023, 12, 22, 18, 10, 18, 946, DateTimeKind.Local).AddTicks(6057),
                            Email = "root@localhost",
                            Name = "Root",
                            Password = "abcd1234",
                            UserTypeId = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef4afba71f")
                        });
                });

            modelBuilder.Entity("Shared.Data.UserHasRelationToRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasDefaultValue(new Guid("c92db414-765b-46dd-bf40-ef7d5a5abd7b"))
                        .HasColumnName("role_id");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.HasKey("RoleId", "UserId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RoleId" }, "IDX_FK_USERHASRELATIONTOROLE_ID_ROLE");

                    b.HasIndex(new[] { "UserId" }, "IDX_FK_USERHASRELATIONTOROLE_ID_USER");

                    b.ToTable("user_has_relation_to_role", (string)null);
                });

            modelBuilder.Entity("Shared.Data.UserType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "IDX_ID")
                        .HasDatabaseName("IDX_ID2");

                    b.ToTable("user_type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c92db314-765b-46dd-bf40-ef7d5a5abd7b"),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("c3f257ff-1c85-4e3c-b6b2-21ef4afba71f"),
                            Name = "Root"
                        });
                });

            modelBuilder.Entity("Shared.Data.User", b =>
                {
                    b.HasOne("Shared.Data.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_USER_ID_TO_USERTYPE");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("Shared.Data.UserHasRelationToRole", b =>
                {
                    b.HasOne("Shared.Data.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Shared.Data.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
